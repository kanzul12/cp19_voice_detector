Google voice (speech to text) library:

This project aims to bring the power of the Google Voice API to
the Python language in a simple,
easy-to-use manner. Currently it allows you to place calls, send sms,
download voicemails/recorded messages, and search the various
folders of your Google Voice Accounts.
You can use the Python API or command line script to schedule
calls, check for new received calls/sms,
or even sync your recorded voicemails/calls.
Works for Python 2 and Python 3

__author__ = 'Justin Quick and Joe McCall'
__email__ = 'justquick@gmail.com, joe@mcc4ll.us',
__copyright__ = 'Copyright 2009, Justin Quick and Joe McCall'
__credits__ = ['Justin Quick', 'Joe McCall', 'Jacob Feisley', 'John Nagle']
__license__ = 'New BSD'

try:
	__version__ = (__import__('pkg_resources').get_distribution('googlevoice').version)
except Exception:
	__version__ = 'unknown'

from .voice import Voice
from .util import Phone, Message, Folder

__all__ = ['Voice', 'Phone', 'Message', 'Folder']

Coding:

Simple script to startup a python interpreter after
logging into the voice service.
Local variable `voice` is set as the main Voice instance.
Invoke with python -m googlevoice.interact


import textwrap
import code

from . import Voice


banner = textwrap.dedent("""You are now using Google Voice in the interactive python shellTry 'help(voice)' for more info""").lstrip()


def main():
    voice = Voice()
    voice.login()

    code.interact(banner=banner, local=locals())


__name__ == '__main__' and main()


Examples:

1.from __future__ import print_function

from googlevoice import Voice


def run():
    voice = Voice()
    voice.login()

    for message in voice.voicemail().messages:
        print(message)


__name__ == '__main__' and run()

2.from six.moves import input

from googlevoice import Voice


def run():
    voice = Voice()
    voice.login()

    outgoingNumber = input('Number to call: ')
    forwardingNumber = input('Number to call from [optional]: ') or None

    voice.call(outgoingNumber, forwardingNumber)

    if input('Calling now... cancel?[y/N] ').lower() == 'y':
        voice.cancel(outgoingNumber, forwardingNumber)


__name__ == '__main__' and run()


Videos related to google voice:

1.https://www.youtube.com/watch?v=5eRxMyf_2Rc

2.https://www.youtube.com/watch?v=8IIrTsvmzmA

3.https://www.youtube.com/watch?v=FNdIYPDitQ4

Discription about google voice library:

1.https://pypi.org/project/googlevoice/
